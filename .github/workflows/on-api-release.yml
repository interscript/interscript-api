name: on-api-release

on:
  release:
    types: [ published ]

env:
  GITHUB_PUSH_TOKEN: ${{ secrets.INTERSCRIPT_CI_PAT }}
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  build-release:
    runs-on: ubuntu-latest
    # id=68949242 => interscript-ci user
    if: ${{ github.event.release.author.id == 68949242 }}  #contains(github.event.release.body, '#releaseed-by-ci')
    steps:
      - uses: actions/checkout@v2
        with:
          path: git

#      - name: debug
#        run: echo "${{ toJSON(github.event.release) }}"

      - name: setup env vars
        run: |
          RELEASE_BODY="${{github.event.release.body}}"
          echo "RELEASE_BODY=$RELEASE_BODY" >> ${GITHUB_ENV}
          RELEASE_TAG_NAME="${{github.event.release.tag_name}}"
          echo "RELEASE_TAG_NAME=$RELEASE_TAG_NAME" >> ${GITHUB_ENV}
          GEM_VERSION=$(echo "$RELEASE_BODY" | grep -Po '(?<=v)[^;]+')
          echo "GEM_VERSION=$GEM_VERSION" >> ${GITHUB_ENV}

          AWS_LAMBDA="${GITHUB_WORKSPACE}/AWS_LAMBDA"
          mkdir -p "${AWS_LAMBDA}"
          echo "AWS_LAMBDA=$AWS_LAMBDA" >> ${GITHUB_ENV}
          echo "AWSL_SRC_ZIP=${AWS_LAMBDA}/aws-lambda-src.zip" >> ${GITHUB_ENV}
          echo "AWSL_LAYER_ZIP=${AWS_LAMBDA}/aws-lambda-layer.zip" >> ${GITHUB_ENV}

      - name: setup ruby+install
        uses: ruby/setup-ruby@v1.75.0
        with:
          bundler-cache: false
          ruby-version: 2.7

      - name: build "-api" source
        working-directory: git
        run: |
          zip -r ${AWSL_SRC_ZIP} lib

      - name: build "-layer"
        working-directory: git/.github/awsl-layer-docker
        run: |
          ls -all
          bash build.sh
          cp libs.zip $AWSL_LAYER_ZIP

      - name: upload lambda layer to current release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{env.RELEASE_TAG_NAME}}
          files: |
            ${{env.AWSL_SRC_ZIP}}
            ${{env.AWSL_LAYER_ZIP}}

      - name: dispatch "infrastructure-lambda-api"
        uses: peter-evans/repository-dispatch@v1
        with:
          token: ${{ env.GITHUB_PUSH_TOKEN }}
          repository: interscript/infrastructure-lambda-api
          event-type: ${{ github.repository }}
          client-payload: >-
            {
              "workflow": "on-api-release.yml",
              "api_tag_name": "${{env.RELEASE_TAG_NAME}}"
            }
