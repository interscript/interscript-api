name: on-release

on:
  release:
    types: [ published ]

env:
  GITHUB_PUSH_TOKEN: ${{ secrets.INTERSCRIPT_CI_PAT }}
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Use Ruby
        uses: actions/setup-ruby@v1
        with:
          ruby-version: '2.7'
          architecture: 'x64'

      - name: setup env vars
        run: |
          RELEASE_NAME="${{github.event.release.name}}"
          echo "RELEASE_NAME=$RELEASE_NAME" >> ${GITHUB_ENV}
          INTERSCRIPT_VERSION=$(echo "$RELEASE_NAME" | grep -Po '(?<=v)[^;]+')
          echo "INTERSCRIPT_VERSION=$INTERSCRIPT_VERSION" >> ${GITHUB_ENV}

          AWS_LAMBDA="${GITHUB_WORKSPACE}/AWS_LAMBDA"
          mkdir -p "${AWS_LAMBDA}"
          echo "AWS_LAMBDA=${GITHUB_WORKSPACE}/AWS_LAMBDA" >> ${GITHUB_ENV}
          echo "AWSL_SRC_ZIP=${AWS_LAMBDA}/aws-lambda-src.zip" >> ${GITHUB_ENV}
          echo "AWSL_LAYER_ZIP=${AWS_LAMBDA}/aws-lambda-layer.zip" >> ${GITHUB_ENV}

      - name: debug
        run: |
          echo "RELEASE_NAME=$RELEASE_NAME"
          echo "INTERSCRIPT_VERSION=$INTERSCRIPT_VERSION"

#          echo "INTERSCRIPT_VERSION=${GITHUB_REF#refs/*/v}" >> ${GITHUB_ENV}

      - name: build "interscript-api" source
        run: |
          gem install bundler
          bundle config set path "./vendor/bundle"
          bundle install --without=development --jobs 4 --retry 3
          zip -r ${AWSL_SRC_ZIP} vendor lib

      - name: build api-lambda layer
        working-directory: .github/awsl-layer-docker
        run: |
          bash build.sh
          zip -r ${AWSL_LAYER_ZIP} libs

      - name: upload lambda layer to current release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            ${{env.AWSL_SRC_ZIP}}
            ${{env.AWSL_LAYER_ZIP}}

## temp comment this for testing purpose
#      - name: dispatch "infrastructure-lambda-api"
#        uses: peter-evans/repository-dispatch@v1
#        with:
#          token: ${{ env.GITHUB_PUSH_TOKEN }}
#          repository: interscript/infrastructure-lambda-api
#          event-type: ${{ github.repository }}
#          client-payload: '{ "workflow": "terraform", "interscript_version": "${{env.INTERSCRIPT_VERSION}}" }'
